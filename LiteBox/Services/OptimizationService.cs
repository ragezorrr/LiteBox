using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Threading.Tasks;
using Microsoft.Win32;
using LiteBoxOptimizer.Models;

namespace LiteBoxOptimizer.Services
{
    public class OptimizationService
    {
        public async Task<bool> ApplyOptimizationAsync(OptimizationItem item)
        {
            try
            {
                switch (item.Type)
                {
                    case OptimizationType.Registry:
                        return await ApplyRegistryTweakAsync(item.Script);
                    
                    case OptimizationType.PowerShell:
                        return await ExecutePowerShellScriptAsync(item.Script);
                    
                    default:
                        return false;
                }
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"Error applying optimization: {ex.Message}");
                return false;
            }
        }

        private async Task<bool> ApplyRegistryTweakAsync(string script)
        {
            return await Task.Run(() =>
            {
                try
                {
                    var lines = script.Split('\n', StringSplitOptions.RemoveEmptyEntries);
                    foreach (var line in lines)
                    {
                        if (line.StartsWith("reg add"))
                        {
                            ExecuteRegistryCommand(line);
                        }
                    }
                    return true;
                }
                catch
                {
                    return false;
                }
            });
        }

        private async Task<bool> ExecutePowerShellScriptAsync(string script)
        {
            return await Task.Run(() =>
            {
                try
                {
                    var startInfo = new ProcessStartInfo
                    {
                        FileName = "powershell.exe",
                        Arguments = $"-Command \"{script}\"",
                        UseShellExecute = false,
                        RedirectStandardOutput = true,
                        RedirectStandardError = true,
                        CreateNoWindow = true,
                        Verb = "runas"
                    };

                    using var process = Process.Start(startInfo);
                    process?.WaitForExit();
                    return process?.ExitCode == 0;
                }
                catch
                {
                    return false;
                }
            });
        }

        private void ExecuteRegistryCommand(string command)
        {
            try
            {
                var startInfo = new ProcessStartInfo
                {
                    FileName = "cmd.exe",
                    Arguments = $"/c {command}",
                    UseShellExecute = false,
                    CreateNoWindow = true,
                    Verb = "runas"
                };

                using var process = Process.Start(startInfo);
                process?.WaitForExit();
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"Registry command failed: {ex.Message}");
            }
        }

        public List<OptimizationCategory> GetOptimizationCategories()
        {
            return new List<OptimizationCategory>
            {
                new OptimizationCategory
                {
                    Name = "Tweaks",
                    Description = "–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
                    Icon = "‚öôÔ∏è",
                    Items = new ObservableCollection<OptimizationItem>
                    {
                        new OptimizationItem
                        {
                            Name = "–£–±—Ä–∞—Ç—å –≤–∫–ª–∞–¥–∫—É –ì–∞–ª–µ—Ä–µ—è –∏–∑ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞",
                            Description = "–£–¥–∞–ª—è–µ—Ç –≤–∫–ª–∞–¥–∫—É '–ì–∞–ª–µ—Ä–µ—è' –∏–∑ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ Windows 11",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Desktop\NameSpace_41040327\{e88865ea-0e1c-4e20-9aa6-edcd0212c87c}"" /v ""System.IsPinnedToNameSpaceTree"" /t REG_DWORD /d 0 /f",
                            RequiresAdmin = true
                        },
                        new OptimizationItem
                        {
                            Name = "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤",
                            Description = "–í–∫–ª—é—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced"" /v ""HideFileExt"" /t REG_DWORD /d 0 /f",
                            RequiresAdmin = false
                        },
                        new OptimizationItem
                        {
                            Name = "–û—Ç–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–∏ Windows",
                            Description = "–û—Ç–∫–ª—é—á–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–≤—É–∫–∏ Windows –¥–ª—è –±–æ–ª–µ–µ —Ç–∏—Ö–æ–π —Ä–∞–±–æ—Ç—ã",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_CURRENT_USER\AppEvents\Schemes"" /ve /d "".None"" /f",
                            RequiresAdmin = false
                        },
                        new OptimizationItem
                        {
                            Name = "–û—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ Windows",
                            Description = "–û—Ç–∫–ª—é—á–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_CURRENT_USER\Control Panel\Desktop"" /v ""UserPreferencesMask"" /t REG_BINARY /d ""9012038010000000"" /f",
                            RequiresAdmin = false
                        }
                    }
                },
                new OptimizationCategory
                {
                    Name = "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                    Description = "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã",
                    Icon = "üöÄ",
                    Items = new ObservableCollection<OptimizationItem>
                    {
                        new OptimizationItem
                        {
                            Name = "–û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã",
                            Description = "–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Windows –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –º–µ—Å—Ç–∞",
                            Type = OptimizationType.PowerShell,
                            Script = @"cleanmgr /sagerun:1",
                            RequiresAdmin = false
                        },
                        new OptimizationItem
                        {
                            Name = "–û—Ç–∫–ª—é—á–∏—Ç—å –≥–∏–±–µ—Ä–Ω–∞—Ü–∏—é",
                            Description = "–û—Ç–∫–ª—é—á–∞–µ—Ç –≥–∏–±–µ—Ä–Ω–∞—Ü–∏—é –∏ —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª hiberfil.sys",
                            Type = OptimizationType.PowerShell,
                            Script = @"powercfg -h off",
                            RequiresAdmin = true
                        },
                        new OptimizationItem
                        {
                            Name = "–û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à DNS",
                            Description = "–û—á–∏—â–∞–µ—Ç –∫–µ—à DNS –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
                            Type = OptimizationType.PowerShell,
                            Script = @"ipconfig /flushdns",
                            RequiresAdmin = true
                        }
                    }
                },
                new OptimizationCategory
                {
                    Name = "–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å",
                    Description = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏",
                    Icon = "üîí",
                    Items = new ObservableCollection<OptimizationItem>
                    {
                        new OptimizationItem
                        {
                            Name = "–û—Ç–∫–ª—é—á–∏—Ç—å —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é Windows",
                            Description = "–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ—Ç —Å–±–æ—Ä —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö Microsoft",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DataCollection"" /v ""AllowTelemetry"" /t REG_DWORD /d 0 /f",
                            RequiresAdmin = true
                        },
                        new OptimizationItem
                        {
                            Name = "–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∫–ª–∞–º—É –≤ Windows",
                            Description = "–û—Ç–∫–ª—é—á–∞–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é –ü—É—Å–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager"" /v ""SystemPaneSuggestionsEnabled"" /t REG_DWORD /d 0 /f",
                            RequiresAdmin = false
                        }
                    }
                },
                new OptimizationCategory
                {
                    Name = "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
                    Description = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
                    Icon = "üé®",
                    Items = new ObservableCollection<OptimizationItem>
                    {
                        new OptimizationItem
                        {
                            Name = "–í–∫–ª—é—á–∏—Ç—å —Ç–µ–º–Ω—É—é —Ç–µ–º—É",
                            Description = "–í–∫–ª—é—á–∞–µ—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É –¥–ª—è Windows –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"" /v ""AppsUseLightTheme"" /t REG_DWORD /d 0 /f",
                            RequiresAdmin = false
                        },
                        new OptimizationItem
                        {
                            Name = "–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å",
                            Description = "–û—Ç–∫–ª—é—á–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
                            Type = OptimizationType.Registry,
                            Script = @"reg add ""HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"" /v ""EnableTransparency"" /t REG_DWORD /d 0 /f",
                            RequiresAdmin = false
                        }
                    }
                }
            };
        }
    }
}
